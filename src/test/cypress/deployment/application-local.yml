# ===================================================================
# Artemis specific properties
# ===================================================================

artemis:
    course-archives-path: ./exports/courses         # a folder in which archived courses and exams are stored.
    repo-clone-path: ./repos                        # a folder in which git repos for the online code editor are stored. In a multi node setup, this folder should be in a shared file system area (e.g. based on NFS), so that user can access the same files over multiple nodes
    repo-download-clone-path: ./repos-download      # a temporary folder, in which git repos are downloaded that are immediately deleted afterwards (e.g. exports, plagiarism checks), should NOT be in a shared file system area
    encryption-password: artemis-encrypt       # arbitrary password for encrypting database values
    user-management:
        use-external: false
        internal-admin:
            username: artemis_admin
            password: artemis_admin
    version-control:
        url: http://host.docker.internal:8081
        user: artemis                # e.g. ga12abc
        password: 
        # token: <token>                  # VCS API token giving Artemis full Admin access.
        ci-token:    # Token generated by the CI (e.g. Jenkins) for webhooks from the VCS to the CI. Not needed for Bamboo+Bitbucket
        ssh-keys-url-path: /profile/keys  # Url Path to access a users ssh keys, for gitlab this is '/profile/keys'
        token:  #Gitlab access token
        ssh-template-clone-url: ssh://git@localhost:8081/    # Url Stem for cloning via ssh, for gitlab use 'ssh://git@artemistest2gitlab.ase.in.tum.de:2222/'
    #    ssh-private-key-folder-path: E:/Uni/Artemis       # the path to the folder in which the private ssh key file (e.g. id_rsa) is stored that can be used to clone git repos on the version control server
#        ssh-private-key-password: <ssh-private-key-password>        # the password for the private ssh key
    continuous-integration:
        user: artemis                # e.g. ga12abc
        password: 
        url: http://host.docker.internal:8082
        vcs-application-link-name: LS1 Bitbucket Server     # If the VCS and CI are directly linked (normally only for Bitbucket + Bamboo)
        empty-commit-necessary: false                        # Do we need an empty commit for new exercises/repositories in order for the CI to register the repo
        # Hash/key of the ci-token, equivalent e.g. to the ci-token in version-control
        # Some CI systems, like Jenkins, offer a specific token that gets checked against any incoming notifications
        # from a VCS trying to trigger a build plan. Only if the notification request contains the correct token, the plan
        # is triggered. This can be seen as an alternative to sending an authenticated request to a REST API and then
        # triggering the plan.
        # In the case of Artemis, this is only really needed for the Jenkins + GitLab setup, since the GitLab plugin in
        # Jenkins only allows triggering the Jenkins jobs using such a token. Furthermore, in this case, the value of the
        # hudson.util.Secret is stored in the build plan, so you also have to specify this encrypted string here and NOT the actual token value itself!
        # You can get this by GETting any job.xml for a job with an activated GitLab step and your token value of choice.
        secret-push-token: 
        # Key of the saved credentials for the VCS service
        # Bamboo: not needed
        # Jenkins: You have to specify the key from the credentials page in Jenkins under which the user and
        #          password for the VCS are stored
        vcs-credentials: 
        # Key of the credentials for the Artemis notification token
        # Bamboo: not needed
        # Jenkins: You have to specify the key from the credentials page in Jenkins under which the authentication-token is stored
        artemis-authentication-token-key: 
        # The actual value of the notification token to check against in Artemis. This is the token that gets send with
        # every request the CI system makes to Artemis containing a new result after a build.
        # Bamboo: The token value you use for the Server Notification Plugin
        # Jenkins: The token value you use for the Server Notification Plugin and is stored under the notification-token credential above
        artemis-authentication-token-value: 
        build-timeout: 30 # Does cancel jenkins builds after 30 minutes to remove build that get stuck
    lti: # only important for online courses that use LTI, can typically be ignored
        id: artemis_lti
        oauth-key: artemis_lti_key
        oauth-secret: <secret>
        user-prefix-edx: edx_
        user-prefix-u4i: u4i_
        user-group-name-edx: edx
        user-group-name-u4i: u4i
    git:
        name: Artemis
        email: artemis.in@tum.de
    athene:
        url: http://localhost
        base64-secret: YWVuaXF1YWRpNWNlaXJpNmFlbTZkb283dXphaVF1b29oM3J1MWNoYWlyNHRoZWUzb2huZ2FpM211bGVlM0VpcAo=
        token-validity-in-seconds: 10800
    apollon:
        conversion-service-url: http://localhost:8080
