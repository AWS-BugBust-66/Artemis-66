Developer Guide/Readme for using and extending user settings

    The (data/interface/class) hierarchy is explained in user-settings.service.ts (look at the interfaces)

    How to create a new "child"-settings.component : (Look at notification-settings as a prime example for child-settings):

        0)  Add a new route for the new settings under userSettingsState (children)
            Add your option to the container.html (under <!-- links to different settings -->)

        1) Create a new folder for childSettings and put childSettings specific files into it

        2.a) Use the prototype html(copy) and scss(link) in child-settings to reuse the same UI (as in notification-settings)
        2.b) Create a new child-settings.default.ts file and create your options based on the user-settings hierarchy
                Add a new X-OptionCore that extends OptionCore and define the needed properties for child-settings
                Add the new category to user-settings.constants.ts (under webapp/shared/constants)
               (look at notification-settings.default.ts for an example)
        2.c) Be careful and precise with the naming of new optionSpecifiers. Use them to create a mapping/correspondence to the actual changes in system-logic/behavior
               These names correspond with other places where mapping and translation take place (TranslationFile : userSettings.json)
               (use the camelCase pipe before the artemisTranslate pipe for easy mappings)

        3) Create a new child-settings.component.ts file :
                   Extend from this component and implement OnInit
                   Place the relevant Services for the parent(prototype) component in the constructor
                   Inside ngOnInit() call super.ngOnInit(), afterwards set the child specific userSettingsCategory(same as in default.ts) and changeEventMessage

        4) For further child specific logic e.g. add a new child-settings.service file, new custom template/scss, etc.

    Server Side :
        For every new child-settings you have to create a new table, rest controller (service) and repository due to the possibly big differences between the OptionCores.
            (Might change due to found similarities)

For further reading see the original PR that introduces these settings : https://github.com/ls1intum/Artemis/pull/3922
